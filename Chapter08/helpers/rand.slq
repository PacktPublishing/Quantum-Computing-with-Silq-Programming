// Random number generators

def uniformInt(range:!â„•){
    // returns x~{0,...range-1}
    n:=ceil(log(range)/log(2)) coerce !â„•;
    r:=range;
    while (r>range-1) {
        // rerolls r if it is greater than range
        r=0;
        for k in [0..n){
            // rolls each bit of r
            r+=2^k*rand();
        }   
    }
    return r;
}

def rand(){
    // quantum number generator
    return measure(H(false));
}

